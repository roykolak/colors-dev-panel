// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Panel.Views.ColorControlsView = (function(_super) {

    __extends(ColorControlsView, _super);

    function ColorControlsView() {
      return ColorControlsView.__super__.constructor.apply(this, arguments);
    }

    ColorControlsView.prototype.template = "<div class=\"color_inputs\">\n  <input type=\"text\" class=\"hex_input\" placeholder=\"#CCCCCC\" />\n  <input type=\"color\" class=\"color_picker\" />\n</div>";

    ColorControlsView.prototype.events = {
      "input .color_picker": "onColorPickerClick",
      "keyup .hex_input": "onHexInput"
    };

    ColorControlsView.prototype.initialize = function() {
      return this.model.on('change:color', this.updateHaxInput, this);
    };

    ColorControlsView.prototype.render = function() {
      this.$el.html(Mustache.render(this.template));
      return this;
    };

    ColorControlsView.prototype.onColorPickerClick = function(ev) {
      return this.model.set({
        color: $(ev.currentTarget).val()
      });
    };

    ColorControlsView.prototype.onHexInput = function(ev) {
      var value;
      ev.preventDefault();
      value = $(ev.currentTarget).val();
      if (value.length === 7) {
        return this.model.set({
          color: value
        });
      }
    };

    ColorControlsView.prototype.updateHaxInput = function() {
      return this.$('.hex_input').val(Panel.Lib.Color.toHexCSS(this.model.get('color')));
    };

    return ColorControlsView;

  })(Backbone.View);

}).call(this);
