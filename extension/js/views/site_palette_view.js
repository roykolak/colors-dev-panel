// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Panel.Views.SitePaletteView = (function(_super) {

    __extends(SitePaletteView, _super);

    function SitePaletteView() {
      return SitePaletteView.__super__.constructor.apply(this, arguments);
    }

    SitePaletteView.prototype.template = "<ul class=\"palette\">\n  {{#sitePalette}}\n    <li>\n      <a href=\"#\" class=\"site_color\" data-color=\"{{.}}\" style=\"background: {{.}}\"></a>\n    </li>\n  {{/sitePalette}}\n</ul>";

    SitePaletteView.prototype.events = {
      "click .site_color": "onSiteColorClick"
    };

    SitePaletteView.prototype.initialize = function() {
      return this.model.on('change:sitePalette', this.render, this);
    };

    SitePaletteView.prototype.render = function() {
      this.$el.html(Mustache.render(this.template, this.model.toJSON()));
      return this;
    };

    SitePaletteView.prototype.onSiteColorClick = function(ev) {
      ev.preventDefault();
      return this.model.set({
        color: $(ev.currentTarget).data('color')
      });
    };

    return SitePaletteView;

  })(Backbone.View);

}).call(this);
