// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Panel.Views.PaletteView = (function(_super) {

    __extends(PaletteView, _super);

    function PaletteView() {
      return PaletteView.__super__.constructor.apply(this, arguments);
    }

    PaletteView.prototype.template = "<div class=\"range_colors\"></div>";

    PaletteView.prototype.initialize = function() {
      return this.model.on('change:palette', this.render, this);
    };

    PaletteView.prototype.render = function() {
      this.$el.html(Mustache.render(this.template, this.model.toJSON()));
      this.renderColors();
      return this;
    };

    PaletteView.prototype.renderColors = function() {
      var colorsView;
      colorsView = new Panel.Views.ColorsView({
        model: this.model,
        colors: this.model.get('palette')
      });
      return this.$('.range_colors').html(colorsView.render().el);
    };

    return PaletteView;

  })(Backbone.View);

}).call(this);
