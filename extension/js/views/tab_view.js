// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Panel.Views.TabView = (function(_super) {

    __extends(TabView, _super);

    function TabView() {
      return TabView.__super__.constructor.apply(this, arguments);
    }

    TabView.prototype.template = "<ul class=\"tabs\">\n  <li class=\"selected\" data-tab=\"lighten\">\n    <a href=\"#\">Lighten</a>\n  </li>\n  <li data-tab=\"darken\">\n    <a href=\"#\">Darken</a>\n  </li>\n  <li data-tab=\"saturate\">\n    <a href=\"#\">Saturate</a>\n  </li>\n  <li data-tab=\"desaturate\">\n    <a href=\"#\">Desaturate</a>\n  </li>\n  <li data-tab=\"blend\">\n    <a href=\"#\">Blend</a>\n  </li>\n  <li data-tab=\"schemas\">\n    <a href=\"#\">Schemas</a>\n  </li>\n</ul>\n<div id=\"tab_content\" style=\"overflow: scroll\"></div>";

    TabView.prototype.events = {
      "click li": "onItemClick"
    };

    TabView.prototype.render = function() {
      this.$el.html(Mustache.render(this.template));
      this.trigger('selection', 'lighten');
      return this;
    };

    TabView.prototype.onItemClick = function(ev) {
      var $el;
      ev.preventDefault();
      $el = $(ev.currentTarget);
      this.$('.selected').removeClass('selected');
      $el.addClass('selected');
      return this.trigger('selection', $el.data('tab'));
    };

    TabView.prototype.update = function($el) {
      return this.$('#tab_content').html($el);
    };

    return TabView;

  })(Backbone.View);

}).call(this);
